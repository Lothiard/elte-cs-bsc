<svg xmlns="http://www.w3.org/2000/svg" width="605.58" height="463" viewBox="0 0 908.37 694.5" preserveAspectRatio="xMinYMin meet">
<metadata>
<structo:source xmlns:structo="https://nigjo.github.io/structogramview/">
<![CDATA[CAPTION: Lengyel(str: S): S
 IF: str[0] = '('
  count := 0
  FOR: i := 1 to str.length() - 2
   IF: str[i] = '('
    count := count + 1
   ENDIF:
   IF: str[i] = ')'
    count := count + 1
   ENDIF:
   IF: count = 0
    left := str.substr(1, i)
    op := str[i + 1]
    right := str.substr(i + 2, length(str) - 2)
    return op + " " + Lengyel(left) + " " + Lengyel(right)
   ENDIF:
  ENDFOR:
 ELSE:
  return str
 ENDIF:]]>
</structo:source>
</metadata>
<style>
svg{stroke:none;stroke-width:1px;fill:white;}
line{stroke:black;}
text{font-family:sans-serif;fill:black;}
.comment&gt;text{font-style:italic;fill:gray;}
.whiteShadow{fill:none !important;stroke:white;stroke-width:2px;}
.casevalue,.blocktitle{fill:gray;font-size:75%;font-style:italic;}
.caption{font-weight:bold;font-size:1.25em;}
svg{font-size:24px}</style>
<style class="darkreader darkreader--sync" media="screen"/>
<g class="diagram" transform="translate(0,0)">
<rect width="908.37" height="694.5"/>
<text x="19.5" y="45" textLength="295.5" class="caption">Lengyel(str: S): S</text>
<g class="if" transform="translate(12,57)">
<line x1="884.37" y1="0" x2="884.37" y2="625.5"/>
<line x1="0" y1="0" x2="0" y2="625.5"/>
<line x1="0" y1="0" x2="884.37" y2="0"/>
<line x1="0" y1="625.5" x2="884.37" y2="625.5"/>
<line x1="0" y1="0" x2="756.6" y2="55.5"/>
<line x1="756.6" y1="55.5" x2="884.37" y2="0"/>
<text x="381" y="27" textLength="123" class="whiteShadow">str[0] = '('</text>
<text x="381" y="27" textLength="123">str[0] = '('</text>
<g class="then" transform="translate(1.5,55.5)">
<text x="4.5" y="-6" textLength="37.5" class="blocktitle">true</text>
<g class="sequence" transform="translate(0,0)">
<line x1="-1.5" y1="0" x2="756.6" y2="0"/>
<text x="6" y="33" textLength="126">count := 0</text>
</g>
<g class="for" transform="translate(0,49.5)">
<line x1="-1.5" y1="0" x2="756.6" y2="0"/>
<line x1="0" y1="519" x2="755.1" y2="519"/>
<text x="12" y="33" textLength="276">i := 1 to str.length() - 2</text>
<g class="block" transform="translate(36,49.5)">
<g class="if" transform="translate(0,0)">
<line x1="0" y1="0" x2="0" y2="106.5"/>
<line x1="0" y1="0" x2="719.1" y2="0"/>
<line x1="0" y1="0" x2="551.6" y2="55.5"/>
<line x1="551.6" y1="55.5" x2="719.1" y2="0"/>
<text x="301.5" y="27" textLength="115.5" class="whiteShadow">str[i] = '('</text>
<text x="301.5" y="27" textLength="115.5">str[i] = '('</text>
<g class="then" transform="translate(1.5,55.5)">
<text x="4.5" y="-6" textLength="37.5" class="blocktitle">true</text>
<g class="sequence" transform="translate(0,0)">
<line x1="-1.5" y1="0" x2="551.6" y2="0"/>
<line x1="0" y1="51" x2="550.1" y2="51"/>
<text x="6" y="33" textLength="229.5">count := count + 1</text>
</g>
</g>
<g class="else" transform="translate(551.6,55.5)">
<line x1="0" y1="0" x2="0" y2="51"/>
<text x="118.7" y="-6" textLength="43.5" class="blocktitle">false</text>
<g class="sequence" transform="translate(1.5,0)">
<line x1="-1.5" y1="0" x2="167.5" y2="0"/>
<line x1="0" y1="51" x2="166" y2="51"/>
</g>
</g>
</g>
<g class="if" transform="translate(0,106.5)">
<line x1="0" y1="0" x2="0" y2="106.5"/>
<line x1="0" y1="0" x2="719.1" y2="0"/>
<line x1="0" y1="0" x2="551.6" y2="55.5"/>
<line x1="551.6" y1="55.5" x2="719.1" y2="0"/>
<text x="301.5" y="27" textLength="115.5" class="whiteShadow">str[i] = ')'</text>
<text x="301.5" y="27" textLength="115.5">str[i] = ')'</text>
<g class="then" transform="translate(1.5,55.5)">
<text x="4.5" y="-6" textLength="37.5" class="blocktitle">true</text>
<g class="sequence" transform="translate(0,0)">
<line x1="-1.5" y1="0" x2="551.6" y2="0"/>
<line x1="0" y1="51" x2="550.1" y2="51"/>
<text x="6" y="33" textLength="229.5">count := count + 1</text>
</g>
</g>
<g class="else" transform="translate(551.6,55.5)">
<line x1="0" y1="0" x2="0" y2="51"/>
<text x="118.7" y="-6" textLength="43.5" class="blocktitle">false</text>
<g class="sequence" transform="translate(1.5,0)">
<line x1="-1.5" y1="0" x2="167.5" y2="0"/>
<line x1="0" y1="51" x2="166" y2="51"/>
</g>
</g>
</g>
<g class="if" transform="translate(0,213)">
<line x1="0" y1="0" x2="0" y2="255"/>
<line x1="0" y1="0" x2="719.1" y2="0"/>
<line x1="0" y1="0" x2="645.6" y2="55.5"/>
<line x1="645.6" y1="55.5" x2="719.1" y2="0"/>
<text x="300" y="27" textLength="118.5" class="whiteShadow">count = 0</text>
<text x="300" y="27" textLength="118.5">count = 0</text>
<g class="then" transform="translate(1.5,55.5)">
<text x="4.5" y="-6" textLength="37.5" class="blocktitle">true</text>
<g class="sequence" transform="translate(0,0)">
<line x1="-1.5" y1="0" x2="645.6" y2="0"/>
<text x="6" y="33" textLength="250.5">left := str.substr(1, i)</text>
</g>
<g class="sequence" transform="translate(0,49.5)">
<line x1="-1.5" y1="0" x2="645.6" y2="0"/>
<text x="6" y="33" textLength="181.5">op := str[i + 1]</text>
</g>
<g class="sequence" transform="translate(0,99)">
<line x1="-1.5" y1="0" x2="645.6" y2="0"/>
<text x="6" y="33" textLength="469.5">right := str.substr(i + 2, length(str) - 2)</text>
</g>
<g class="sequence" transform="translate(0,148.5)">
<line x1="-1.5" y1="0" x2="645.6" y2="0"/>
<line x1="0" y1="51" x2="644.1" y2="51"/>
<text x="6" y="33" textLength="631.5">return op + " " + Lengyel(left) + " " + Lengyel(right)</text>
</g>
</g>
<g class="else" transform="translate(645.6,55.5)">
<line x1="0" y1="0" x2="0" y2="199.5"/>
<text x="24.7" y="-6" textLength="43.5" class="blocktitle">false</text>
<g class="sequence" transform="translate(1.5,0)">
<line x1="-1.5" y1="0" x2="73.5" y2="0"/>
<line x1="0" y1="51" x2="72" y2="51"/>
</g>
</g>
</g>
</g>
</g>
</g>
<g class="else" transform="translate(756.6,55.5)">
<line x1="0" y1="0" x2="0" y2="568.5"/>
<text x="77.47" y="-6" textLength="43.5" class="blocktitle">false</text>
<g class="sequence" transform="translate(1.5,0)">
<line x1="-1.5" y1="0" x2="126.28" y2="0"/>
<line x1="0" y1="51" x2="124.78" y2="51"/>
<text x="6" y="33" textLength="112.5">return str</text>
</g>
</g>
</g>
</g>
</svg>